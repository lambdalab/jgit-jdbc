apply plugin: 'java'
apply plugin: 'scala'
apply plugin: 'io.morethan.jmhreport'
apply plugin: 'me.champeau.gradle.jmh'
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'

group 'com.lambdalab.jgit'

repositories {
  mavenCentral()
}
sourceCompatibility = 1.8
targetCompatibility = 1.8


sourceSets {
  main {
    scala {
      srcDirs = ['src/main/scala']
    }
  }
  test {
    scala {
      srcDirs = ['src/test/scala']
    }
  }
}
dependencies {
  compile 'org.scala-lang:scala-library:2.11.8'
  compile(group: 'org.eclipse.jgit', name: 'org.eclipse.jgit', version: jgitVersion) {
    exclude group: "org.apache.httpcomponents", module:"httpclient"
  }
  compile 'com.datastax.cassandra:cassandra-driver-core:3.3.2'
  compile "org.apache.ignite:ignite-core:2.3.0"
  compile 'ch.qos.logback:logback-classic:1.2.3'
  compile 'org.scalikejdbc:scalikejdbc_2.11:3.1.0'
  compile 'org.apache.httpcomponents:httpclient:4.5'
  compile 'commons-io:commons-io:2.6'
  testCompile 'com.github.docker-java:docker-java:3.0.9'
  testCompile group: 'org.eclipse.jgit', name: 'org.eclipse.jgit.junit', version: jgitVersion
  testCompile 'org.scalatest:scalatest_2.11:3.0.0'
  testCompile group: 'junit', name: 'junit', version: '4.12'
  testCompile 'mysql:mysql-connector-java:5.1.35'
  testCompile "org.apache.ignite:ignite-rest-http:2.3.0"
}


task benchmark(type: JavaExec, dependsOn: testClasses) {
  main = 'benchmarks.Main'
  classpath = sourceSets.test.runtimeClasspath
  jvmArgs = ["-XX:-TieredCompilation","-Xmx1G","-XX:NewSize=4G"]
  args = ["-p","-i","runtime"]
}

jmhReport {
  jmhResultPath = project.file('build/reports/jmh/results.json')
  jmhReportOutput = project.file('build/reports/jmh')
}
jmh {
  include = ['ReadFileBenchmark', ]
  resultFormat = 'json'
  jvmArgs=['-Xmx2G','-Xms2G']
  fork = 0
}
publishing {
  publications {
    MyPublication(MavenPublication) {
      from components.java
      version "0.0.5"
    }
  }
}

bintray {
  user = System.getenv('BINTRAY_USER')
  key = System.getenv('BINTRAY_KEY')
  publications = ['MyPublication']
  pkg {
    repo = 'generic'
    name = 'jgit-jdbc'
    userOrg = 'lambdalab'
    licenses = ['Apache-2.0']
    vcsUrl = 'https://github.com/lambdalab/jgit-jdbc.git'
    version {
      name = "0.0.5"
    }
  }
}

task installLocal(dependsOn: publishToMavenLocal)

