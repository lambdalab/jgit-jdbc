plugins {
  id "me.champeau.gradle.jmh" version "0.4.3"
  id "io.morethan.jmhreport" version "0.7.0"
  id "com.jfrog.bintray" version "1.7.3"
  id 'com.github.johnrengelman.shadow' version '2.0.2'
}

group 'com.lambdalab'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'scala'
apply plugin: 'io.morethan.jmhreport'
apply plugin: 'me.champeau.gradle.jmh'
apply plugin: 'maven'
apply plugin: 'maven-publish'

repositories {
  mavenCentral()
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

def jgitVersion = '4.10.0.201712302008-r'
//def jgitVersion = '4.8.0.201706111038-r'

sourceSets {
  main {
    scala {
      srcDirs = ['src/main/scala']
    }
  }
  test {
    scala {
      srcDirs = ['src/test/scala']
    }
  }
}
dependencies {
  compile 'org.scala-lang:scala-library:2.11.8'
  shadow(group: 'org.eclipse.jgit', name: 'org.eclipse.jgit', version: jgitVersion) {
    exclude group: "org.apache.httpcomponents", module:"httpclient"
  }
  compile 'com.datastax.cassandra:cassandra-driver-core:3.3.2'

  shadow 'ch.qos.logback:logback-classic:1.2.3'
  compile 'org.scalikejdbc:scalikejdbc_2.11:3.1.0'
  compile 'org.apache.httpcomponents:httpclient:4.5'
  shadow 'commons-io:commons-io:2.6'
  testCompile 'com.github.docker-java:docker-java:3.0.9'
  testCompile group: 'org.eclipse.jgit', name: 'org.eclipse.jgit.junit', version: jgitVersion
  testCompile 'org.scalatest:scalatest_2.11:3.0.0'
  testCompile group: 'junit', name: 'junit', version: '4.12'
  testCompile 'mysql:mysql-connector-java:5.1.35'
}

shadowJar {
  baseName = 'jgit-jdbc-gerrit'
  dependencies {
    exclude(dependency('com.google.guava::.*'))
  }
  classifier = ''
}

task benchmark(type: JavaExec, dependsOn: testClasses) {
  main = 'benchmarks.Main'
  classpath = sourceSets.test.runtimeClasspath
  jvmArgs = ["-XX:-TieredCompilation","-Xmx1G","-XX:NewSize=4G"]
  args = ["-p","-i","runtime"]
}

jmhReport {
  jmhResultPath = project.file('build/reports/jmh/results.json')
  jmhReportOutput = project.file('build/reports/jmh')
}
jmh {
  include = ['ReadFileBenchmark']
  resultFormat = 'json'
  jvmArgs=['-Xmx2G','-Xms2G']
}
publishing {
  publications {
    MyPublication(MavenPublication) {
      from components.java
    }
    shadow(MavenPublication) { publication ->
      project.shadow.component(publication)
      artifactId = "jgit-jdbc-gerrit"
    }
  }
}

bintray {
  user = System.getenv('BINTRAY_USER')
  key = System.getenv('BINTRAY_KEY')
  publications = ['MyPublication']
  pkg {
    repo = 'generic'
    name = 'jgit-jdbc'
    userOrg = 'lambdalab'
    licenses = ['Apache-2.0']
    vcsUrl = 'https://github.com/lambdalab/jgit-jdbc.git'
  }

}

task installLocal(dependsOn: publishToMavenLocal)

